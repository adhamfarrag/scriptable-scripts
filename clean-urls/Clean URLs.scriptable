{
  "always_run_in_app" : false,
  "icon" : {
    "color" : "deep-brown",
    "glyph" : "magic"
  },
  "name" : "Clean URLs",
  "script" : "let url = args.urls\n\nif (typeof url !== 'string') {\n  url = url.toString()\n}\n\nif (!isValidURL(url)) {\n  let notification = new Notification()\n\n  notification.title = 'No URL Found'\n  notification.body = 'Please, add a URL'\n  notification.schedule('no-url-found-notification')\n} else if (url.length > 0 && !url.includes('?')) {\n  let notification = new Notification()\n\n  notification.title = 'Already clean'\n  notification.body = 'The URL is already clean'\n  notification.schedule('already-clean-notification')\n} else if (url.length > 0 && url.includes('?')) {\n  url = url.split('?')[0]\n\n  let notification = new Notification()\n\n  notification.title = 'URL Cleaned'\n  notification.body = 'The URL has been cleaned and copied to the clipboard'\n  notification.schedule('cleaned-url-notification')\n\n  Pasteboard.copyString(url)\n  ShareSheet.present([url])\n}\n\nfunction isValidURL(url) {\n  let regex =\n    \/^(https?:\\\/\\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(:\\d+)?(\\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(#[-a-z\\d_]*)?$\/i\n  return regex.test(url)\n}",
  "share_sheet_inputs" : [
    "url",
    "file-url"
  ]
}